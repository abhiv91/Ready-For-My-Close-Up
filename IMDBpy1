__author__ = 'anima_000'
import imdb
import re

IMDB = imdb.IMDb()

monthdict = {'January':1,'February':2,'March':3,'April':4,'May':5,'June':6,'July'Im:7,\
             'August':8,'September':9,'October':10,'November':11,'December':12}
genrelist=['Action','Adventure','Animation','Biography','Comedy','Crime','Documentary','Drama','Family','Fantasy','Film-Noir','Game-Show','History','Horror','Music', 'Musical','Mystery','News','Reality-TV','Romance','Sci-Fi','Sport','Talk-Show','Thriller','War','Western']
def is_number(s):
        try:
            float(s)
            return True
        except ValueError:
            return False
def test (cesc):
    def parseDate(date):
        result = {}

        if re.match(".*\d{4}$", date):
            result['year'] = date[-4:]

        m = re.match(".*(?P<month>January|February|March|April|May|June|July|"
                    "August|September|October|November|December).*", date, re.I)
        if m:
            result['month'] = m.group('month').lower()

            # try to grab date too then
            daymatch = re.match("^(?P<day>\d{1,2}).*", date)

            if daymatch:
                result['day'] = daymatch.group('day')
        return result

    def parseBudget(amount):
        """
        assumptions:
        - currency is always before the number
        - no fractions
        """

        # find index first number
        for i in range(len(amount)):
            if amount[i] in "0123456789":
                amount_idx = i
                break

        currency = amount[:amount_idx].strip()
        amount = re.sub("\D", "", amount[amount_idx:])

        return amount, currency

    def parseWeekendGross(gross_text):
        g = gross_text.split(' (')
        if not len(g) == 4:
            return ""
        amount, currency = parseBudget(g[0])
        country = g[1].lstrip('(').rstrip(')')
        date = parseDate(g[2].lstrip('(').rstrip(')'))
        day, month, year = date['day'], date['month'], date['year']
        screens = re.sub("\D", "", g[3])
        if not screens:
            screens = "''"

        return amount, currency, country, day, month, year, screens

    def Screen():
        for entry in opening_weekends:
            amount, currency, country, day, month, year, screens = parseWeekendGross(entry)
            if country == "USA":
                return screens
                break
    def genrecheck(genre):
        mgenre = ''
        for i in genrelist:
            if i != "'":
                mgenre += i
                if mgenre in genrelist:
                    return mgenre

                    break
            else :
                mgenre = ''


    def checkmonth(text):
        mword = ""
        check = 0
        for i in text:
            if i != " ":
                mword += i
                if mword in monthdict:
                    return monthdict[mword]
                    check = 1
                    break

            else:
                mword = ""
        if check == 0:
            return  0



    def ParseGross(RawGross):

        R = RawGross
        Gross=""
        for i in R:
            if is_number(i):
               Gross += i
            if i == "(":
                break
        return float(Gross)


    def stripid (movieid):
        temp = ""
        for i in movieid:
            if is_number(i):
                temp +=i
        return int(temp)

    movieid = str(cesc)
    try :
        movie = IMDB.get_movie(movieid)
    except:
        pass
    title = movie['title']

    print title
    print 1200080 - stripid(movieid) , "more titles to go"
    IMDB.update (movie,'business')
    b = movie['business']
    genre = movie['genre']
    if b["budget"]:
        Budget = str (b["budget"])
        print Budget
    else:
        return None
    if b ["opening weekend"]:
        opening_weekends= b ["opening weekend"]
        Opening= str (opening_weekends)

    else:
        return None

    Gross= str(b ["gross"])


    budget= ParseGross(Budget)
    opening_gross= ParseGross(Opening)
    gross= ParseGross(Gross)


    #genre = genrecheck(genre)
    bmult = opening_gross/budget



    month = checkmonth(Opening)

    screens =  Screen()

    #create dictionary for storing vales. imdbID is key

    openingperscreen = opening_gross/stripid(screens)

    films[stripid(movieid)] = [title,budget,month,gross,opening_gross,stripid(screens),bmult,openingperscreen,genre]
    return films

    print films
films = {}

drogba =range(1198430,1200080)
idholder = []
c=0

for i in drogba:
    idholder.append(str(i))
    c= c+1

iddata = ['0765010', '0158983', '0111503', '0295297', '1223236', '0378194', '0181865', '0290002', '0257756', '1179056', '1591479', '0936501', '1707386', '1433813', '0160797', '0408790', '0253754', '0103639', '0149624', '0073486', '0112573', '0834001', '0079417', '0864761', '0290095', '0327056', '0416508', '0090605', '0113277', '0073195', '0316465', '0134067', '1041829', '0315327', '0195685', '0117500', '0383216', '0120094', '0095382', '0101761', '0892791', '0099653', '0436595', '0102744', '0119822', '0314353', '1046997', '1680059', '0808417', '0293508', '0343121', '1490017', '0762125', '0066580', '0232500', '0457400', '0104431', '1074638', '0112792', '0104437', '0808510', '0962736', '0114048', '0110357', '0311429', '0110353', '0120382', '0107822', '0120794', '0117438', '0097441', '0316654', '0116213', '0093105', '2215719', '1201607', '0395699', '0120890', '0790724', '0453556', '0373926', '0204313', '0111282', '0477347', '0080549', '0356618', '0477348', '2024544', '0368447', '0159365', '0116695', '0385880', '0130018', '0164184', '1055369', '2140373', '0356910', '1279935', '0105391', '0268978', '0144214', '1702443', '0438205', '1401152', '0381061', '0770828', '0964517', '0355702', '0315297', '0207201', '2024432', '0454876', '1664894', '0443489', '0053285', '0418279', '0780571', '1245526', '0311289', '0085549', '0117913', '1790885', '0989757', '0120338', '0258068', '1232207', '0481499', '0094737', '0217505', '1375666', '0949731', '0118928', '0114069', '0290296', '0100404', '0450385', '0086960', '1320253', '0114148', '0299658', '1194173', '1979320', '0407887', '0448694', '0379557', '0120660', '0393597', '1020876', '0381707', '0120746', '0121765', '0121766', '0103786', '0822832', '0110123', '1001508', '1127884', '0389557', '1430607', '0183659', '0350258', '1142800', '0498380', '0317705', '0471042', '0095016', '0361467', '0076759', '0258000', '1014775', '0096895', '0056937', '0120591', '0252501', '0200550', '0462499', '0106611', '1014759', '0926084', '0107211', '0349825', '0981227', '0099052', '0181689', '0815241', '0385752', '1232829', '0084434', '0409847', '0102059', '0115641', '0096943', '0104691', '0155478', '0434409', '0289765', '1133985', '0337978', '0120347', '1114740', '0368891', '0092086', '0116705', '0117381', '1153706', '0161081', '0092644', '0070511', '0113855', '2609912', '0384642', '0405159', '0054022', '0473075', '0104389', '1606389', '0300471', '0112740', '1263670', '0089560', '0813547', '2226417', '0463034', '0089155', '0087928', '0120844', '0118571', '0407304', '0119008', '0446046', '0106977', '0113161', '0352248', '1667353', '0095360', '0453562', '0108160', '0213149', '0117318', '0372183', '1621045', '0198781', '1670345', '0477071', '0814255', '0104797', '0479500', '1706593', '0466856', '1323594', '1262416', '0119094', '0075148', '0088763', '0087332', '0467197', '0095953', '0088011', '0085255', '0184894', '0226648', '0107007', '0086312', '1091751', '0910936', '0458525', '1772341', '0132477', '1735898', '1049413', '0118884', '0097733', '0118883', '0046183', '0267626', '0096487', '0119488', '0368933', '0332452', '0288477', '0348150', '0246460', '0389860', '0758730', '1409024', '0317910', '0117038', '0408236', '0079116', '1276104', '1397280', '2357129', '1010048', '0312004', '0181875', '0104231', '0360717', '0268380', '0816711', '0098273', '0469903', '0960731', '1229238', '0118615', '1126591', '0118617', '1464540', '1067106', '0120657', '0110064', '3165608', '1210166', '0099528', '0209144', '1078912', '0107798', '0112641', '0127536', '1091191', '0059113', '0499549', '1650043', '1854564', '1403865', '0467200', '1673434', '0367882', '0372784', '0926129', '0104427', '0227445', '0458352', '0458339', '2281587', '0031381', '0105112', '1190080', '1205537', '0156934', '0264464', '0401623', '0097457', '1397514', '0454776', '0821642', '0097027', '0241527', '0765128', '0093073', '0217869', '2458776', '0947810', '2247692', '0092675', '0146336', '1175491', '0119280', '1800241', '0427969', '0363988', '0186151', '1951264', '1535108', '1535109', '0109830', '0373889', '2404463', '0094226', '0104694', '0034746', '0067093', '0119217', '0062622', '0215750', '0277296', '0247638', '0086450', '0087277', '1616195', '1024648', '0099938', '1013743', '0401997', '0443274', '2017020', '0120667', '0800320', '0443272', '0119528', '0070735', '1582507', '0310793', '0106770', '0100332', '0443295', '0493464', '0086510', '1300854', '0140352', '0114279', '0069704', '0814335', '0234215', '1099212', '1068680', '0330373', '0120891', '0098966', '0298148', '0242423', '0106246', '0120888', '0102945', '0211181', '0245280', '0120903', '0120902', '1001526', '0146882', '0887912', '0120751', '0094898', '0115956', '0120755', '0109021', '0400497', '0162650', '0114168', '0101329', '0248667', '0482599', '0400717', '0252076', '0758766', '0266543', '0462396', '0122718', '0323642', '0086425', '0086190', '0162661', '1075417', '0356634', '0329575', '0117887', '0090633', '1538403', '1453405', '0449088', '0449089', '0102798', '0397892', '1155076', '0365957', '0075784', '0097499', '0337741', '1568346', '0100502', '0465234', '0457510', '1325004', '0120768', '0988045', '1205489', '0253474', '0181316', '0168786', '1446192', '0338337', '0120689', '0993846', '0105417', '0090685', '0467406', '0089755', '1682181', '0404032', '0429493', '0077928', '0212985', '0096316', '0297445', '0329101', '0970179', '0401729', '0081760', '0293564', '0375210', '1650062', '0105690', '0049092', '1034303', '0398808', '1454029', '0426931', '1285016', '0236388', '0372588', '0903624', '0171363', '0106965', '1129445', '0108052', '0080661', '0112462', '0099747', '0374102', '0096928', '0133240', '0230600', '0322589', '1399103', '1234721', '0076752', '0472062', '0454824', '0099871', '1059786', '0119567', '0421715', '0084805', '0345950', '0402399', '0265029', '0099800', '0480249', '0103747', '0338094', '0079826', '0266915', '0436697', '0840361', '1515091', '0167261', '0167260', '1712170', '0334405', '0108551', '0344510', '0137363', '0092948', '0440963', '0322802', '0137494', '0111070', '0298203', '0893382', '0103064', '1020938', '1142988', '0258463', '0263488', '0800080', '0078788', '0120828', '0108308', '0325980', '0808151', '0065702', '0945513', '0102492', '0145681', '0099399', '0435761', '0253556', '0065377', '0182914', '0114214', '0489270', '0451079', '1091617', '0800369', '0493430', '0446059', '0322330', '0317303', '0249478', '0445990', '0977855', '0091419', '0275847', '0455824', '0075860', '0206275', '0479968', '1555064', '2294629', '0139654', '0236493', '0120647', '0318649', '0416449', '0497116', '0416236', '0117631', '0094137', '0327084', '0325703', '0430308', '0286106', '0319262', '1073498', '1007029', '0110322', '0947798', '0428803', '0081633', '0478311', '0108002', '0082846', '0221027', '0450345', '0395169', '0172495', '0452637', '0172493', '0386032', '0104291', '0184907', '0469641', '0264472', '0066011', '0096969', '0765446', '0100994', '0910970', '0095243', '0371746', '0102370', '0113957', '0790636', '0455407', '1193138', '1645089', '0295178', '0317219', '0099077', '0219854', '0120855', '0120185', '0384537', '0109446', '0358273', '0133093', '0128853', '1462769', '0190641', '0080684', '2396566', '0785006', '1440129', '0238112', '0116621', '2177771', '0338751', '0145503', '1222817', '1222815', '1529567', '0120461', '0099674', '0424095', '0327597', '0478087', '0112722', '1013752', '1013753', '0340855', '0146316', '0298130', '0892375', '0145487', '0190332', '0421729', '0102510', '0318462', '0454848', '1217209', '0163025', '1411250', '0103671', '0093010', '0119432', '0180073', '2431286', '0119174', '1196141', '0770752', '1298650', '0080948', '1710396', '0448157', '0313737', '0413267', '1116184', '0155267', '0087469', '0166813', '0465538', '0091763', '0177971', '0238546', '0120863', '0120915', '0436078', '0796368', '1454468', '0120912', '1981115', '0114746', '0796366', '0094889', '1000774', '1702439', '0119654', '0963178', '1234548', '0848228', '1477715', '1023481', '1905041', '0390521', '1668200', '0405325', '1327773', '0203019', '0289043', '0361748', '0265086', '0181852', '0081353', '0359013', '0944835', '1259521', '0112864', '0086154', '1408101', '1318514', '0427229', '0342258', '0097239', '0418689', '0098554', '0133152', '0120738', '1130884', '0103855', '0120737', '0104257', '0167404', '1213585', '0103919', '0327437', '1583421', '0368008', '0765429', '0117060', '0125439', '0089767', '0103939', '0097351', '0463998', '0110116', '0482571', '0892782', '0096320', '0055614', '0177789', '0332379', '0162222', '0118971', '0325710', '0182789', '0376994', '1136608', '0204626', '0386140', '0164912', '1504320', '0363163', '1228705', '0424942', '0353164', '0120783', '1596346', '0171804', '0120784', '0120787', '0393735', '0098536', '0473705', '0240772', '0259288', '1655420', '0109444', '0119468', '0068646', '1860353', '0093058', '0379725', '0116209', '1229827', '0096438', '0106912', '0174856', '0108147', '0120681', '0106918', '0361596', '0245562', '0083107', '0426883', '0111257', '0468569', '0116253', '1800741', '0098382', '0413300', '0240510', '0397313', '0083511', '0267913', '0097757', '1027743', '2073128', '0472198', '0455590', '0101902', '0349683', '0112302', '0120815', '0103644', '0983193', '1057500', '0101393', '0417741', '0059742', '0048280', '0251114', '1675434', '0486946', '0087553', '0948470', '0351283', '0317648', '2357291', '0307453', '0383574', '0159273', '0297037', '0209163', '0479952', '0308644', '1690953', '0102926', '0210945', '1104001', '0157583', '0210232', '0066995', '1226229', '0183649', '0125664', '1843866', '0117998', '0145660', '0418763', '0290334', '0076666', '0095776', '0346491', '0371724', '0430105', '1259571', '0117571', '0244244', '0410097', '0988595', '0368578', '0091278', '0107207', '0107206', '1915581', '0878804', '0441773', '0099044', '0328880', '0103776', '0097570', '0097576', '0100486', '0413015', '1599348', '0138097', '0095705', '0119190', '0091187', '0102065', '0264395', '1345836', '0193925', '0110478', '0108101', '0092099', '0098635', '0800308', '0335438', '0837562', '1302011', '0403455', '0150377', '1047007', '0287717', '0055254', '0098067', '2515086', '0301727', '1392170', '0257044', '0107290', '0091877', '1045658', '0126029', '0089927', '0164334', '0120102', '0257568', '1080016', '0129290', '0120857', '0985699', '0084865', '0107614', '0421054', '0134119', '0454921', '0116629', '0108358', '0268397', '0101516', '2024469', '1152836', '0462538', '0438097', '0112819', '0116250', '1922612', '0230011', '0200027', '0133751', '0401792', '0422720', '0477302', '0297144', '0399877', '0191133', '0092965', '0169547', '0120201', '1596343', '1046173', '1233227', '0091554', '0306841', '1324999', '0279111', '0097336', '1198138', '0363771', '0414055', '1566648', '0423294', '0082031', '0107969', '0119164', '0278504', '0914798', '1034331', '0830515', '0114287', '0841046', '0084597', '0120632', '0251160', '0367594', '0218967', '0118655', '0382625', '0918927', '1524137', '0099348', '0062512', '0104714', '1723121', '1210819', '0086034', '0448011', '1286537', '0048380', '0427309', '0255798', '0398165']
testdata = ['0134067', '0065377', '0838283', '1231583', '0405159', '1284575', '0113497', '0409847', '1302067', '0098067', '0960144', '0119282', '0377981', '1790885', '0230600', '0108052', '0097165', '0159365', '0117038', '1261945', '0477051', '0258000', '0368933', '0250494', '0453562', '0217869', '0085549', '1037705', '0443649', '1014775', '0076666', '0088939', '1135503', '1001508', '0311113', '0120746', '0252076', '1907668', '0265029', '0289765', '0098635', '0840361', '0109446', '0117731', '1621045', '0099938', '0112740', '0090685', '0171363', '0206275', '0120686', '0087538', '0473075', '0362120', '0120587', '0492956', '0183505', '0290296', '2024469', '1142800', '1245526', '0277296', '1691917', '0327056', '0333780', '0408790', '0101862', '0120917', '1210819', '0134084', '1483013', '1142988', '0814255', '0454848', '1204342', '0114898', '0137494', '0343135', '0104389', '1790886', '0078767', '0100404', '0072431', '0190641', '0377092', '0433035', '0090605', '0083131', '0328880', '1764651', '0452681', '0400717', '0032910', '1570728', '0357413', '0106582', '0230011', '0120902', '1193138', '1217613', '1253864', '0080339', '2226417', '0105690', '2140373', '0105112', '0985699', '1860353', '0109635', '0369735', '0099371', '0113862', '0103874', '0368578', '0079945', '0398808', '0329101', '0442933', '0398808', '0478087', '0281373', '0114924', '0332280', '0268397', '0099044', '0093565', '0370263', '1033643', '0377818', '0457510', '0489099', '0489270', '0324216', '1060277', '0486822', '0790724', '0989757', '0049833', '0448011', '0080549', '1568911', '0091129', '1114677', '1077368', '0071455', '0120632', '0101540', '1219289', '0212720', '0094889', '0277434', '0328107', '0106965', '2177771', '0217505', '0983193', '1047540', '0386117', '0141926', '0362227', '0988595', '0079588', '0113041', '0213203', '0120661', '1013743', '0088933', '0118883', '0083511', '0377109', '0218967', '0111280', '1598778', '1272878', '0146838', '0360486', '0327597', '0350258', '0102975', '0120828', '0477348', '0164334', '0970179', '0385880', '0094721', '0166813', '0164052', '0401729', '2334879', '0785006', '0427152', '0414853', '0373926', '0104691', '1564349', '0443274', '0119345', '0109040', '0113161', '0486583', '0450385', '1477715', '0091877', '0111282', '0375063', '1155056', '0257106', '0416236', '2017020', '0115759', '0434409', '0113855', '0469641', '0479143', '0162650', '0770752', '0107050', '0421729', '0091042', '0120844', '0385752', '0266697']

count = 0

megadata = idholder+iddata


for x in testdata:

    try:
        test(x)
        count = count +1
        print count
        '''
        writer = open("testset.txt","a")
        writer.write(str(films))
        '''
        print films

    except :
        pass

